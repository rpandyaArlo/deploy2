---

- name: Create application directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "{{ atl_product_user }}"
    group: "{{ atl_product_user }}"
  with_items:
    - "{{ atl_product_home }}"
    - "{{ atl_product_home_shared }}"
    - "{{ atl_product_home_shared }}/attachments"
    - "{{ atl_product_shared_plugins }}"
  changed_when: false  # For Molecule idempotence check

# Create symlink to force single (unclustered) Confluence to store
# shared-data and attachments in the shared drive.
- name: Symlink local attachments to shared storage
  file:
    src: "{{ item.0 }}"
    dest: "{{ item.1 }}"
    force: false
    state: link
    mode: 0750
    owner: "{{ atl_product_user }}"
    group: "{{ atl_product_user }}"
  vars:
    - links:
        - ["{{ atl_product_home_shared }}/", "{{ atl_product_home }}/shared-home"]
        - ["{{ atl_product_home_shared }}/attachments/", "{{ atl_product_home }}/attachments"]
  with_nested:
    - "{{ links }}"

- name: Create Tomcat server config
  template:
    src: server.xml.j2
    dest: "{{ atl_product_installation_versioned }}/conf/server.xml"

- name: Override JVM memory settings.
  replace:
    path: "{{ atl_product_installation_versioned }}/bin/setenv.sh"
    regexp: "-{{ item }}\\d+m "
    replace: "-{{ item }}{{ atl_jvm_heap }} "
  with_items:
    - 'Xmx'
    - 'Xms'

- name: Set the Tomcat environment
  lineinfile:
    path: "{{ atl_product_installation_versioned }}/bin/setenv.sh"
    insertafter: "EOF"
    line: 'export CATALINA_OPTS="${CATALINA_OPTS} {{ atl_catalina_opts }} {{ atl_catalina_opts_extra }}"'


- name: Configure login properties
  template:
    src: seraph-config.xml.j2
    dest: "{{ atl_product_installation_versioned }}/confluence/WEB-INF/classes/seraph-config.xml"

- name: Configure Confluence home directory
  template:
    src: confluence-init.properties.j2
    dest: "{{ atl_product_installation_versioned }}/confluence/WEB-INF/classes/confluence-init.properties"

- name: Create Confluence configuration
  template:
    src: confluence.cfg.xml.j2
    dest: "{{ atl_product_home }}/confluence.cfg.xml"
    owner: "{{ atl_product_user }}"
    group: "{{ atl_product_user }}"

- name: Limit permissions on the installation directory
  file:
    path: "{{ atl_product_installation_versioned }}"
    owner: "root"
    group: "root"
    mode: "u=rwX,g=rX,o=rX"
    recurse: true
  with_items:
    - "{{ atl_installer_temp }}"
    - "{{ atl_product_installation_versioned }}"
    - "{{ atl_product_version_cache_dir }}"
  changed_when: false  # For Molecule idempotence check

- name: Grant access to the product working directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "u=rwX,g=rX,o-rwx"
    owner: "{{ atl_product_user }}"
    group: "{{ atl_product_user }}"
    recurse: true
  with_items:
    - "{{ atl_product_installation_versioned }}/logs"
    - "{{ atl_product_installation_versioned }}/temp"
    - "{{ atl_product_installation_versioned }}/work"
  changed_when: false  # For Molecule idempotence check

- name: Assert baseurl to same as atl_proxy_name
  postgresql_query:
    login_host: "{{ atl_db_host }}"
    login_user: "{{ atl_jdbc_user }}"
    login_password: "{{ atl_jdbc_password }}"
    db: "{{ atl_jdbc_db_name }}"
    query: >
      update bandana set bandanavalue=regexp_replace(bandanavalue, %s, %s)
      where bandanacontext = '_GLOBAL' and bandanakey = 'atlassian.confluence.settings';
    positional_args:
      - "<baseUrl>.*</baseUrl>"
      - "<baseUrl>{{ atl_tomcat_scheme }}://{{ atl_proxy_name }}{{ atl_tomcat_contextpath }}</baseUrl>"
  when:
    - atl_proxy_name is defined
    - atl_tomcat_scheme is defined
    - db_created is undefined or not db_created.changed
  tags:
    - skip_on_stack_update
  ignore_errors: yes  # For Molecule as it has no db test framework included
